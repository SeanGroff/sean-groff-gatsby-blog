{"version":3,"sources":["webpack:///./src/styles/ShareButton.js","webpack:///./src/components/TwitterShare.js","webpack:///./src/templates/blog-post.js"],"names":["ShareButton","TwitterShare","memo","className","data-size","href","BlogPostTemplate","data","location","pageContext","React","useLayoutEffect","twttr","widgets","load","isDarkMode","useContext","DarkModeStateContext","post","markdownRemark","siteDescription","excerpt","previous","next","Layout","title","htmlAttributes","lang","meta","name","content","frontmatter","style","display","alignItems","scale","margin","date","color","theme","colors","backgroundColor","padding","dangerouslySetInnerHTML","__html","html","marginBottom","rhythm","Bio","flexWrap","justifyContent","listStyle","to","fields","slug","rel","boxShadow","primary","pageQuery"],"mappings":"0MAYeA,EAVE,uI,YCcFC,EAZMC,gBAAK,kBACxB,YAAC,EAAD,KACE,iBACEC,UAAU,uBACVC,YAAU,QACVC,KAAK,oCAHP,a,wFCkFWC,UA5Ef,YAA4D,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YAC1CC,IAAMC,iBAAgB,WAChBC,OAASA,MAAMC,SACjBD,MAAMC,QAAQC,UAGlB,IAAMC,EAAaL,IAAMM,WAAWC,KAC9BC,EAAOX,EAAKY,eACZC,EAAkBF,EAAKG,QACrBC,EAAmBb,EAAnBa,SAAUC,EAASd,EAATc,KAElB,OACE,YAACC,EAAA,EAAD,CAAQhB,SAAUA,EAAUiB,MAAM,cAChC,YAAC,IAAD,CACEC,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAASV,IACvCK,MAAUP,EAAKa,YAAYN,MAAtB,+BAEP,sBAAKP,EAAKa,YAAYN,OACtB,mBAAKO,MAAO,CAAEC,QAAS,OAAQC,WAAY,WACzC,iBAAGF,MAAK,iBAAOG,aAAM,IAAb,CAAsBC,OAAQ,KAAMlB,EAAKa,YAAYM,MAC7D,YAAC,EAAD,OAEF,mBACEL,MAAO,CACLM,MAAM,GAAIC,IAAMC,OAAOzB,EAAa,WAAa,SACjD0B,gBAAgB,GAAIF,IAAMC,OAAOzB,EAAa,QAAU,YACxD2B,QAAS,UAEXC,wBAAyB,CAAEC,OAAQ1B,EAAK2B,QAE1C,kBAAIb,MAAO,CAAEc,aAAcC,YAAO,MAClC,YAACC,EAAA,EAAD,MAEA,kBACEhB,MAAO,CACLC,QAAS,OACTgB,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXT,QAAS,IAGX,sBACGpB,GACC,YAAC,OAAD,CACE8B,GAAI9B,EAAS+B,OAAOC,KACpBC,IAAI,OACJvB,MAAO,CACLwB,UAAW,OACXlB,MAAM,GAAIC,IAAMC,OAAOiB,UAL3B,KAQKnC,EAASS,YAAYN,QAI9B,sBACGF,GACC,YAAC,OAAD,CACE6B,GAAI7B,EAAK8B,OAAOC,KAChBC,IAAI,OACJvB,MAAO,CACLwB,UAAW,OACXlB,MAAM,GAAIC,IAAMC,OAAOiB,UAGxBlC,EAAKQ,YAAYN,MARpB,UAiBGnB,IAEFoD,EAAS","file":"component---src-templates-blog-post-js-8713463367140bbc6d65.js","sourcesContent":["import styled from '@emotion/styled'\n\nconst ShareButton = styled.span`\n  display: flex;\n  padding: 0 8px;\n  cursor: pointer;\n\n  iframe {\n    margin-bottom: 0;\n  }\n`\n\nexport default ShareButton\n","import React, { memo } from 'react'\n\nimport ShareButton from '../styles/ShareButton'\n\nconst TwitterShare = memo(() => (\n  <ShareButton>\n    <a\n      className=\"twitter-share-button\"\n      data-size=\"small\"\n      href=\"https://twitter.com/intent/tweet\"\n    >\n      Tweet\n    </a>\n  </ShareButton>\n))\n\nexport default TwitterShare\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport TwitterShare from '../components/TwitterShare'\nimport { rhythm, scale } from '../utils/typography'\nimport theme from '../utils/theme'\nimport { DarkModeStateContext } from '../context/DarkModeContext'\nimport '../styles/theme.css'\n\nfunction BlogPostTemplate({ data, location, pageContext }) {\n  React.useLayoutEffect(() => {\n    if (twttr && twttr.widgets) {\n      twttr.widgets.load()\n    }\n  })\n  const isDarkMode = React.useContext(DarkModeStateContext)\n  const post = data.markdownRemark\n  const siteDescription = post.excerpt\n  const { previous, next } = pageContext\n\n  return (\n    <Layout location={location} title=\"Sean Groff\">\n      <Helmet\n        htmlAttributes={{ lang: 'en' }}\n        meta={[{ name: 'description', content: siteDescription }]}\n        title={`${post.frontmatter.title} by Sean Groff @_SeanGroff`}\n      />\n      <h1>{post.frontmatter.title}</h1>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <p style={{ ...scale(-1 / 5), margin: 0 }}>{post.frontmatter.date}</p>\n        <TwitterShare />\n      </div>\n      <div\n        style={{\n          color: `${theme.colors[isDarkMode ? 'offWhite' : 'black']}`,\n          backgroundColor: `${theme.colors[isDarkMode ? 'black' : 'offWhite']}`,\n          padding: '0 32px',\n        }}\n        dangerouslySetInnerHTML={{ __html: post.html }}\n      />\n      <hr style={{ marginBottom: rhythm(1) }} />\n      <Bio />\n\n      <ul\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'space-between',\n          listStyle: 'none',\n          padding: 0,\n        }}\n      >\n        <li>\n          {previous && (\n            <Link\n              to={previous.fields.slug}\n              rel=\"prev\"\n              style={{\n                boxShadow: 'none',\n                color: `${theme.colors.primary}`,\n              }}\n            >\n              ← {previous.frontmatter.title}\n            </Link>\n          )}\n        </li>\n        <li>\n          {next && (\n            <Link\n              to={next.fields.slug}\n              rel=\"next\"\n              style={{\n                boxShadow: 'none',\n                color: `${theme.colors.primary}`,\n              }}\n            >\n              {next.frontmatter.title} →\n            </Link>\n          )}\n        </li>\n      </ul>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n"],"sourceRoot":""}